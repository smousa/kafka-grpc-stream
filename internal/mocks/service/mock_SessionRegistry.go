// Code generated by mockery v2.44.1. DO NOT EDIT.

package service

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	subscribe "github.com/smousa/kafka-grpc-stream/internal/subscribe"
)

// MockSessionRegistry is an autogenerated mock type for the SessionRegistry type
type MockSessionRegistry struct {
	mock.Mock
}

type MockSessionRegistry_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSessionRegistry) EXPECT() *MockSessionRegistry_Expecter {
	return &MockSessionRegistry_Expecter{mock: &_m.Mock}
}

// RegisterSession provides a mock function with given fields: ctx, pub
func (_m *MockSessionRegistry) RegisterSession(ctx context.Context, pub subscribe.Publisher) {
	_m.Called(ctx, pub)
}

// MockSessionRegistry_RegisterSession_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterSession'
type MockSessionRegistry_RegisterSession_Call struct {
	*mock.Call
}

// RegisterSession is a helper method to define mock.On call
//   - ctx context.Context
//   - pub subscribe.Publisher
func (_e *MockSessionRegistry_Expecter) RegisterSession(ctx interface{}, pub interface{}) *MockSessionRegistry_RegisterSession_Call {
	return &MockSessionRegistry_RegisterSession_Call{Call: _e.mock.On("RegisterSession", ctx, pub)}
}

func (_c *MockSessionRegistry_RegisterSession_Call) Run(run func(ctx context.Context, pub subscribe.Publisher)) *MockSessionRegistry_RegisterSession_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(subscribe.Publisher))
	})
	return _c
}

func (_c *MockSessionRegistry_RegisterSession_Call) Return() *MockSessionRegistry_RegisterSession_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockSessionRegistry_RegisterSession_Call) RunAndReturn(run func(context.Context, subscribe.Publisher)) *MockSessionRegistry_RegisterSession_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSessionRegistry creates a new instance of MockSessionRegistry. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSessionRegistry(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSessionRegistry {
	mock := &MockSessionRegistry{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
